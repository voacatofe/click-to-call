#!/bin/bash

# =============================================================================
# SCRIPT DE VERIFICA√á√ÉO R√ÅPIDA DAS CORRE√á√ïES DE SEGURAN√áA
# =============================================================================

echo "üîç Verificando corre√ß√µes de seguran√ßa..."
echo "========================================"

ERRORS=0

# 1. Verificar senhas padr√£o
echo "1. Verificando senhas padr√£o..."
if grep -r "changeme" asterisk/etc/ | grep -v "changeme_update_this" | grep -v ".bak"; then
    echo "   ‚ùå FALHA: Senhas 'changeme' ainda encontradas!"
    ERRORS=$((ERRORS + 1))
elif grep -r "secret = secret" asterisk/etc/ | grep -v ".bak"; then
    echo "   ‚ùå FALHA: Senha AMI padr√£o ainda encontrada!"
    ERRORS=$((ERRORS + 1))
else
    echo "   ‚úÖ Senhas padr√£o removidas"
fi

# 2. Verificar bind addresses
echo "2. Verificando bind addresses..."
if grep -r "bind.*0\.0\.0\.0\|bindaddr.*0\.0\.0\.0" asterisk/etc/ | grep -v ".bak"; then
    echo "   ‚ùå FALHA: Bind 0.0.0.0 ainda presente!"
    ERRORS=$((ERRORS + 1))
else
    echo "   ‚úÖ Bind addresses restringidos"
fi

# 3. Verificar Docker Compose
echo "3. Verificando Docker Compose..."
if grep -q "127.0.0.1:5038:5038" docker-compose.yml; then
    echo "   ‚úÖ Docker Compose corrigido"
else
    echo "   ‚ùå FALHA: Docker Compose n√£o corrigido!"
    ERRORS=$((ERRORS + 1))
fi

# 4. Verificar duplica√ß√µes
echo "4. Verificando duplica√ß√µes..."
PJSIP_LINES=$(wc -l < asterisk/etc/pjsip-unified.conf)
SCRIPT_LINES=$(wc -l < scripts/setup-wss.ps1)

if [ "$PJSIP_LINES" -gt 85 ]; then
    echo "   ‚ùå POSS√çVEL: pjsip-unified.conf pode ter duplica√ß√£o ($PJSIP_LINES linhas)"
    ERRORS=$((ERRORS + 1))
else
    echo "   ‚úÖ pjsip-unified.conf sem duplica√ß√£o ($PJSIP_LINES linhas)"
fi

if [ "$SCRIPT_LINES" -gt 200 ]; then
    echo "   ‚ùå POSS√çVEL: setup-wss.ps1 pode ter duplica√ß√£o ($SCRIPT_LINES linhas)"
    ERRORS=$((ERRORS + 1))
else
    echo "   ‚úÖ setup-wss.ps1 sem duplica√ß√£o ($SCRIPT_LINES linhas)"
fi

# 5. Verificar certificados
echo "5. Verificando configura√ß√£o de certificados..."
if grep -q "asterisk.crt" asterisk/etc/pjsip.conf && grep -q "asterisk.key" asterisk/etc/pjsip.conf; then
    echo "   ‚úÖ Certificados configurados corretamente"
else
    echo "   ‚ùå FALHA: Certificados n√£o configurados corretamente!"
    ERRORS=$((ERRORS + 1))
fi

# RESUMO
echo ""
echo "üìä RESUMO DA VERIFICA√á√ÉO"
echo "======================="

if [ $ERRORS -eq 0 ]; then
    echo "‚úÖ SUCESSO: Todas as verifica√ß√µes passaram!"
    echo ""
    echo "üöÄ Sistema pronto para uso com as corre√ß√µes aplicadas."
    echo "‚ö†Ô∏è  Lembre-se de configurar as vari√°veis de ambiente:"
    echo "   - AMI_SECRET"
    echo "   - AGENT_1001_PASSWORD"
    echo "   - JWT_SECRET"
else
    echo "‚ùå FALHAS: $ERRORS problema(s) encontrado(s)!"
    echo ""
    echo "üîß Execute o script de corre√ß√µes primeiro:"
    echo "   ./apply-security-fixes.sh"
fi

echo ""
echo "üîç Verifica√ß√£o conclu√≠da!"
exit $ERRORS