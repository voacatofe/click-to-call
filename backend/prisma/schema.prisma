// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Modelo para empresas/clientes da sua aplicação
model Company {
  id                String  @id @default(cuid())
  name              String
  rdStationCrmToken String? // O token do RD Station CRM será armazenado aqui
  users             User[]  // Uma empresa pode ter vários usuários
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  password      String    // Adicionamos o campo de senha para login próprio
  emailVerified DateTime?
  image         String?
  role          UserRole  @default(USER) // ADMIN ou USER

  companyId String
  company   Company @relation(fields: [companyId], references: [id])

  accounts Account[]
  sessions Session[]
}

// Modelo de conta para OAuth (ex: Login com Google, etc.)
// A autenticação do RD CRM será feita pelo token na tabela Company
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

// Modelo para gerenciar sessões de login dos usuários
model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
