services:
  db:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-click_to_call}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - db
    ports:
      - "3001:3001"
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-click_to_call}
      - RD_STATION_CLIENT_ID=${RD_STATION_CLIENT_ID}
      - RD_STATION_CLIENT_SECRET=${RD_STATION_CLIENT_SECRET}
      - BACKEND_URL=${BACKEND_URL}
      - FRONTEND_URL=${FRONTEND_URL}
      - RD_STATION_API_BASE=${RD_STATION_API_BASE}
      - ENCRYPTION_SECRET=${ENCRYPTION_SECRET}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION_TIME=${JWT_EXPIRATION_TIME}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - JWT_REFRESH_EXPIRATION_TIME=${JWT_REFRESH_EXPIRATION_TIME}
      - JWT_RESET_SECRET=${JWT_RESET_SECRET}
      - JWT_RESET_EXPIRATION_TIME=${JWT_RESET_EXPIRATION_TIME}
      - JWT_VERIFY_SECRET=${JWT_VERIFY_SECRET}
      - JWT_VERIFY_EXPIRATION_TIME=${JWT_VERIFY_EXPIRATION_TIME}
      - PORT=${PORT}
      - NODE_ENV=${NODE_ENV}
      - LOG_LEVEL=${LOG_LEVEL}
      - LOG_FORMAT=${LOG_FORMAT}
      - LOG_FILE=${LOG_FILE}
      - LOG_MAX_SIZE=${LOG_MAX_SIZE}
      - LOG_MAX_FILES=${LOG_MAX_FILES}
      - LOG_FILE_ENCODING=${LOG_FILE_ENCODING}
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: always
    ports:
      - "3002:3000"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: 